#include <iostream>

using namespace std;

int main()
{
    // Crash test: ???????? ????? ????????? ?? ??????:
    int testArray[2];
    testArray[0] = testArray[1] = 15;
    //    cout << testArray[1] << endl; // ???? crash
    //    cout << testArray[2] << endl; // ??????; ?????????? ??????? ????????
    //    cout << testArray[99999999] << endl; // ??????; ????????????? ???????
                // ?? ???????

        // ????????? ?? ???????????? ?? ????? ? n ????????? – ?????? ?????,
        // ?????? 0<=n<=100
    /*
        double numbers[100];
        int count; // ???????????? ?????????? ?? ??????? ???? ????????
        cin >> count;
        for (int i = 0; i < count; i++)
            cin >> numbers[i];

        // ??????????? ?? ????????? ?????
        for (int i = 0; i < count; i++)
            cout << numbers[i] << " ";
        cout << endl;

        // ???????? ?? ?????
        double numbersCopy[100];
        int countCopy;
        countCopy = count;
        for (int i = 0; i < count; i++)
            numbersCopy[i] = numbers[i];

        // ???????? ???? ??? ?????? ???? ???? ? ???? ????????
        bool equal = true; // ?? ???????? ???????? ?????? "?? ?????"
        if (count != countCopy)
            equal = false;
        else
            for (int i = 0; i < count && equal; i++)
                if (numbers[i] != numbersCopy[i])
                    equal = false;
        cout << (equal ? "Equal" : "Not equal") << endl;
    */

    // ?? ?? ?? ????? ????? ?? ????????? ?????? ??? ????? ??????? ?? ??????????,
    // ????? ?? ?????? ??????????? ??????? ? ????.
    double array[10] = { -1.5, 0, 3.14, 2.7, 3.14 };
    int length = 5;

    /*
        // ???? ?? ?????????? ?? ?????
        double sum = 0;
        for (int i = 0; i < length; i++)
            sum += array[i];
        cout << "Sum: " << sum << endl;

        // ???? ???? ?? ????????????? ????????
        double sumPositives = 0;
        for (int i = 0; i < length; i++)
            if (array[i] > 0)
                sumPositives += array[i];
        cout << "Sum of positive elements: " << sumPositives << endl;
    */

    // ?? ?? ??????? ???? ??????? ??????? ??????????? ???????
/*
    bool hasNegative = false;
    for (int i = 0; i < length && !hasNegative; i++)
        if (array[i] < 0)
            hasNegative = true;
    cout << (hasNegative ? "Yes" : "No") << endl;
    // ?? ?? ??????? ???? ?????? ???????? ? ?????? ?? ?????????????
    cout << (hasNegative ? "No" : "Yes") << endl;
*/

// ?? ?? ?????? ????????, ?? ????? ?? ?????? ??????? ? ?????? ????????.
// ??? ?? ?? ?????? ?????, ?? ?? ???????? -1. ??? ?? ??????? ??
// ??????? ?????, ?? ?? ?????? ??????? ???????
/*
    int index = -1;
    double x = 3.14; // ???? ? ??????????, ????? ??????
    for (int i = 0; i < length && index < 0; i++)
        if (array[i] == x)
            index = i;
    cout << index << endl;
*/
// ????? ???????: ?????????? ???????
/*
int index = -1;
double x = 3.14; // ???? ? ??????????, ????? ??????
for (int i = length - 1; i >= 0 && index < 0; i--)
    if (array[i] == x)
        index = i;
cout << index << endl;
*/

// ?? ?? ?????? ??????? ?? ????? ?? ??????? ?????? (?????????? ????
// ???? ?? ?? ??????? ??????)
/*
    int index = 2; // ???? ? ???????? ?? ????????, ????? ?? ???? ??????
    for (int i = index; i < length - 1; i++)
        array[i] = array[i + 1];
    length--;

    // ???? ???????? ????? ??? ?????????:
    for (int i = 0; i < length; i++)
        cout << array[i] << " ";
    cout << endl;
*/

// ?? ?? ?????? ??????? ?? ??????? ???????
/*
    int index = 2; // ???? ? ?????????, ?? ????? ?? ??????? ????? ???????
    double value = -35.5; // ???? ? ??????????, ????? ?? ???????
    // ?????? ???????:
//    for (int i = index; i < length; i++)
//        array[i + 1] = array[i];
//    array[index] = value;
//    length++;
    // ????? ???????:
    for (int i = length - 1; i >= index; i--) // ?????? ?? ????????? ??????!
        array[i + 1] = array[i];
    array[index] = value;
    length++;

    // ???? ???????? ????? ??? ?????????:
    for (int i = 0; i < length; i++)
        cout << array[i] << " ";
    cout << endl;
*/

// ?? ?? ??????? ?????????? ? ???????? ?? ?????????? ???????
/*
    int minIndex = 0; // ????????? ?????? ??????? ?? ?????????
    for (int i = 1; i < length; i++) // ?????????? ?????? ??????? -
        // ???? ????? ?? ?? ?????????? ??? ???? ??
        if (array[i] < array[minIndex])
            minIndex = i;
    cout << "Index: " << minIndex << ", value: " << array[minIndex] << endl;
*/

// ?? ?? ??????? ???????
/*
    for (int i = 0; i < length - 1; i++)
    {
        int minIndex = i;
        for (int j = i + 1; j < length; j++)
        {
            if (array[j] < array[minIndex])
                minIndex = j;
        }
        double temp = array[i];
        array[i] = array[minIndex];
        array[minIndex] = temp;
    }
    // ???? ???????? ????? ??? ?????????:
    for (int i = 0; i < length; i++)
        cout << array[i] << " ";
*/


// ???????? ??????:

// ????????? ?? ???????:
/*
    double matrix[2][3];
    for (int i = 0; i < 2; i++)
        for (int j = 0; j < 3; j++)
            cin >> matrix[i][j];

    // ????????? ?? ???????:
    for (int i = 0; i < 2; i++)
    {
        for (int j = 0; j < 3; j++)
            cout << matrix[i][j] << " ";
        cout << endl;
    }
*/

/*
    // ???????? ???? ??? ??????? ????????:
    const int ROWS = 2;
    const int COLUMNS = 3;
    double matrix[ROWS][COLUMNS] = {{1, 2, 1}, {3, 3, 3}};
    bool found = false;
    // ? ??????? ??? ?????? ????????? ?????? ???????? ?????????? ?? ??? ?????? (??? ??????????)
    for (int j = 0; j < COLUMNS - 1 && !found; j++)
    {
        for (int k = j + 1; k < COLUMNS && !found; k++)
        {
            // ?? ???????? ???? j-???? ????? ? ??????? ? k-??? ?????:
            bool equal = true;
            for (int i = 0; i < ROWS && equal; i++)
            {
                if (matrix[i][j] != matrix[i][k])
                {
                    equal = false;
                }
            }
            if (equal)
            {
                found = true;
            }
        }
    }
    cout << found << endl;
*/

/*
    // ????????????? ?? ????????? ???????:
    const int MATRIX_SIZE = 4;
    int matrix[MATRIX_SIZE][MATRIX_SIZE] =
        {{1, -2, 3, -4}, {5, 6}, {99}, {13, 14, 15, 16}};

    // ?????? ?? ??????? ???? ??????????, ????? ?? ??????? ??? ??????? ???????? (??? ????)
    for (int i = 0; i < MATRIX_SIZE - 1; i++)
        for (int j = i + 1; j < MATRIX_SIZE; j++)
        {
            int temp = matrix[i][j];
            matrix[i][j] = matrix[j][i];
            matrix[j][i] = temp;
        }

    for (int i = 0; i < MATRIX_SIZE; i++)
    {
        for (int j = 0; j < MATRIX_SIZE; j++)
            cout << matrix[i][j] << " ";
        cout << endl;
    }
*/

/*
    // ????????? ?? ???????? ??? ??????? ????????, ??????????? ? ????
    for (int i = 0; i < MATRIX_SIZE; i++)
        for (int j = i; j < MATRIX_SIZE; j++)
            cout << matrix[i][j] << " ";
    cout << endl;

    // ????????? ?? ???????? ??? ??????? ????????
    for (int i = 0; i < MATRIX_SIZE; i++)
        for (int j = i - 1; j >= 0; j--)
            cout << matrix[i][j] << " ";
    cout << endl;

    // ????????? ?? ???????? ??? ??????? ????????
    // ?? ??????, ????? ??? ?????? ???????
    for (int i = 1; i < MATRIX_SIZE; i++)
        for (int j = 0; j < i; j++)
            cout << matrix[i][j] << " ";
    cout << endl;

    // ????????? ?? ???????? ??? ????????? ????????
    // ?? ??????, ????? ??? ?????? ???????
    for (int i = 0; i < MATRIX_SIZE - 1; i++)
        for (int j = 0; i + j < MATRIX_SIZE - 1; j++)
            cout << matrix[i][j] << " ";
    cout << endl;

    // ???? ????????? ???????? ? ?????? ??????:
    for (int i = 0; i < MATRIX_SIZE; i++)
        cout << matrix[i][MATRIX_SIZE - 1 - i] << " ";
    cout << endl;
*/

// ????? ?????????? ?? ????????? ???????:
// ?????? ???????? ??? ?????? ???????? (???????????
// ? ????), ?? ???????? ? ?????? ??????,
// ?????????? ?? ???-?????? ?????
/*
    for (int j = MATRIX_SIZE - 1; j >= 0; j--)
        for (int i = MATRIX_SIZE - 1;
                i + j >= MATRIX_SIZE - 1; i--)
            cout << matrix[i][j] << " ";
*/
// ????????? ???? ????????????? ????? ????, ??????
// ?? ?????? ??????? ???????? :)


// ??????.
// ????? ? ????? ?? ???? ????????????? ?????.
// ?? ?? ??????? ??? ?????, ????? ???????
// ? ??????? ??? ?????? ???????? ?? ??????, ?????
// ???????? ???? ??????? ?????.
// ??????: {23, 173, 51, 0, 99} -> {99, 51, 173}
/*
    const int MAX = 5;

    int count = MAX;
    int array[MAX] = {23, 173, 51, 0, 99};

    int filtered[MAX];
    int filteredCount = 0;

    for (int i = count - 1; i >= 0; i--)
    {
        bool allNegative = true;
        int currentNumber = array[i];
        do
        {
            if (currentNumber % 2 == 0)
                allNegative = false;
            currentNumber /= 10;
        }
        while (currentNumber != 0 && allNegative);

        if (allNegative)
        {
            filtered[filteredCount] = array[i];
            filteredCount++;
        }
    }

    for (int i = 0; i < filteredCount; i++)
        cout << filtered[i] << endl;
*/

    return 0;
}